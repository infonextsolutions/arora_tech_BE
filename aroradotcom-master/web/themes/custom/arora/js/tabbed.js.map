{"version":3,"file":"tabbed.js","sources":["packages/tabbed/src/tabbed.es6.js"],"sourcesContent":["/**\n * Tabbed Component\n * @file ES6 component to handle vertical tabs component.\n */\n\nclass Tabbed {\n  constructor(el) {\n    this.element = el;\n    this.tabList = this.element.querySelectorAll('.tabbed-menu ul li a');\n    this.panels = this.element.querySelectorAll('.tabbed-item');\n    this.menuClass = 'tabbed-menu';\n    this.toggleClass = 'tabbed-toggle';\n    this.activeClass = 'active';\n\n    this.handleClick = this.handleClick.bind(this);\n    this.handleToggle = this.handleToggle.bind(this);\n    this.handleKeypress = this.handleKeypress.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    // Get the id from the href\n    const id = e.currentTarget.getAttribute('href');\n    // set the location\n    window.location.hash = id;\n    // Show the panel\n    this.hidePanels();\n    this.showPanel(id.replace('#', ''));\n    // Set the active tab\n    this.setAllInactiveTabs();\n    this.setActiveTab(id);\n    // Close mobile menu\n    this.handleToggle();\n  }\n\n  setTabListeners() {\n    this.tabList.forEach((item) => {\n      item.addEventListener('click', this.handleClick, false);\n    });\n  }\n\n  hidePanels() {\n    this.panels.forEach((panel) => {\n      panel.classList.remove(this.activeClass);\n    });\n  }\n\n  showPanel(id) {\n    const panel = document.getElementById(id);\n    panel.classList.add(this.activeClass);\n  }\n\n  setActiveTab(id) {\n    const tab = this.element.querySelector(`[href=\"${id}\"]`);\n    tab.classList.add(this.activeClass);\n    this.toggle.innerText = tab.innerText;\n  }\n\n  setAllInactiveTabs() {\n    this.tabList.forEach((tab) => {\n      tab.classList.remove(this.activeClass);\n    });\n  }\n\n  createToggle() {\n    this.toggle = document.createElement('button');\n    this.toggle.setAttribute('class', this.toggleClass);\n    this.toggle.innerText = this.tabList[0].innerText;\n    this.element.appendChild(this.toggle);\n    this.addToggleEvents();\n    return this.toggle;\n  }\n\n  handleToggle() {\n    const menu = this.element.querySelector(`.${this.menuClass}`);\n    if (menu.classList.contains(this.activeClass)) {\n      menu.classList.remove(this.activeClass);\n    }\n    else {\n      menu.classList.add(this.activeClass);\n    }\n  }\n\n  handleKeypress(e) {\n    switch (e.code) {\n      case 'Tab':\n        this.tabList[0].focus();\n        break;\n      default:\n        break;\n    }\n  }\n\n  addToggleEvents() {\n    this.toggle.addEventListener('click', this.handleToggle);\n    this.toggle.addEventListener('keydown', this.handleKeypress);\n  }\n\n  init() {\n    this.setTabListeners();\n    this.createToggle();\n  }\n}\n\n/**\n * Initialise for default class.\n */\ndocument.addEventListener('DOMContentLoaded', () => {\n  document.querySelectorAll('.tabbed').forEach((obj) => {\n    const tabbedComponent = new Tabbed(obj);\n    tabbedComponent.init();\n  });\n});\n\nexport default Tabbed;\n"],"names":["Tabbed","el","element","tabList","querySelectorAll","panels","menuClass","toggleClass","activeClass","handleClick","bind","handleToggle","handleKeypress","e","preventDefault","id","currentTarget","getAttribute","window","location","hash","hidePanels","showPanel","replace","setAllInactiveTabs","setActiveTab","forEach","item","addEventListener","panel","classList","remove","document","getElementById","add","tab","querySelector","toggle","innerText","createElement","setAttribute","appendChild","addToggleEvents","menu","contains","code","focus","setTabListeners","createToggle","obj","tabbedComponent","init"],"mappings":"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"}